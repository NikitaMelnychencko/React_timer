{"version":3,"sources":["components/Time/Time.module.scss","components/TimeControls/TimeControls.module.scss","components/Time/Time.jsx","components/TimeControls/TimeControls.jsx","App.jsx","index.js"],"names":["module","exports","Time","props","className","s","min","sec","ms","TimeControls","name","isRunning","click$","fromEvent","document","body","doubleClick$","pipe","buffer","debounceTime","map","clicks","length","filter","clicksLength","ControlButtons","onClick","subscribe","e","App","state","hasStarted","Observable","observer","setInterval","next","val","Object","keys","setState","button","running","this","toLocaleString","undefined","minimumIntegerDigits","fNum","handleClick","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,eAAiB,uC,yJCcpBC,MAZf,SAAcC,GACZ,OACE,sBAAKC,UAAWC,IAAEH,KAAlB,UACGC,EAAMG,IADT,IACeH,EAAMI,IADrB,IAC2BJ,EAAMK,O,yDCkCtBC,MAnCf,SAAsBN,GACpB,IAAIO,EAAO,GAETA,EADEP,EAAMQ,UACD,OAEA,QAET,IAAMC,EAASC,YAAUC,SAASC,KAAM,SAClCC,EAAeJ,EAAOK,KAC1BC,YAAON,EAAOK,KAAKE,YAAa,OAChCC,aAAI,SAAAC,GAAM,OAAIA,EAAOC,UACrBC,aAAO,SAAAC,GAAY,OAAIA,GAAgB,MASzC,OACE,sBAAKpB,UAAWC,IAAEoB,eAAlB,UACE,wBAAQC,QAAS,kBAAMvB,EAAMuB,QAAQhB,IAArC,SACGP,EAAMQ,UAAY,OAAS,UAE9B,wBAAQe,QAAS,WAVnBV,EAAaW,WAAU,SAAAC,GACrBzB,EAAMuB,QAAQ,YASd,kBACA,wBAAQA,QAAS,kBAAMvB,EAAMuB,QAAQ,UAArC,uB,OCuCSG,E,kDAhEb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXxB,IAAK,EACLC,IAAK,EACLC,GAAI,EACJG,WAAW,EACXoB,YAAY,GAPF,E,qDAUd,WAAqB,IAAD,OACF,IAAIC,KAAW,SAAAC,GAC7BC,aAAY,WACV,GAAI,EAAKJ,MAAMnB,UAAW,CACxB,IAAIH,EAAK,EAAKsB,MAAMtB,GAChBD,EAAM,EAAKuB,MAAMvB,IACjBD,EAAM,EAAKwB,MAAMxB,IACjBE,EAAK,IAAKyB,EAASE,KAAK,CAAE3B,GAAIA,EAAK,IAClCyB,EAASE,KAAK,CAAE5B,IAAKA,EAAM,EAAGC,GAAI,IACnCD,EAAM,IAAI0B,EAASE,KAAK,CAAE7B,IAAKA,EAAM,EAAGC,IAAK,OAElD,OAEGoB,WAAU,SAAAS,GACgB,IAA5BC,OAAOC,KAAKF,GAAKd,OACnB,EAAKiB,SAAS,CAAE/B,GAAI4B,EAAI5B,KAEI,QAAxB6B,OAAOC,KAAKF,GAAK,GACnB,EAAKG,SAAS,CAAEhC,IAAK6B,EAAI7B,IAAKC,GAAI,IAElC,EAAK+B,SAAS,CAAEjC,IAAK8B,EAAI9B,IAAKC,IAAK,S,yBAK3C,SAAYiC,GACV,IAAIC,EAAUC,KAAKZ,MAAMnB,UACV,UAAX6B,GAAiC,SAAXA,EACxBE,KAAKH,SAAS,CAAE5B,WAAY8B,EAASV,YAAY,IAC7B,UAAXS,GAAiC,SAAXA,IAC/BE,KAAKH,SAAS,CAAEjC,IAAK,EAAGC,IAAK,EAAGC,GAAI,IACpCkC,KAAKH,SAAS,CAAE5B,WAAW,EAAOoB,YAAY,O,kBAGlD,SAAKH,GACH,OAAOA,EAAEe,oBAAeC,EAAW,CAAEC,qBAAsB,M,oBAE7D,WAAU,IAAD,OACP,OACE,sBAAKzC,UAAU,YAAf,UACE,cAAC,EAAD,CACEE,IAAKoC,KAAKI,KAAKJ,KAAKZ,MAAMxB,KAC1BC,IAAKmC,KAAKI,KAAKJ,KAAKZ,MAAMvB,KAC1BC,GAAIkC,KAAKI,KAAKJ,KAAKZ,MAAMtB,MAE3B,cAAC,EAAD,CACEkB,QAAS,SAAAc,GAAM,OAAI,EAAKO,YAAYP,IACpC7B,UAAW+B,KAAKZ,MAAMnB,UACtBoB,WAAYW,KAAKZ,MAAMC,oB,GA3DfiB,a,MCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASsC,eAAe,W","file":"static/js/main.735ae924.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Time\":\"Time_Time__UMUZv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ControlButtons\":\"TimeControls_ControlButtons__SkAzl\"};","import PropTypes from 'prop-types';\nimport s from './Time.module.scss';\n\nfunction Time(props) {\n  return (\n    <div className={s.Time}>\n      {props.min}:{props.sec}:{props.ms}\n    </div>\n  );\n}\n\nTime.propTypes = {\n  props: PropTypes.object.isRequired,\n};\n\nexport default Time;\n","import PropTypes from 'prop-types';\nimport { fromEvent } from 'rxjs';\nimport { map, buffer, filter, debounceTime } from 'rxjs/operators';\nimport s from './TimeControls.module.scss';\n\nfunction TimeControls(props) {\n  let name = '';\n  if (props.isRunning) {\n    name = 'stop';\n  } else {\n    name = 'start';\n  }\n  const click$ = fromEvent(document.body, 'click');\n  const doubleClick$ = click$.pipe(\n    buffer(click$.pipe(debounceTime(300))),\n    map(clicks => clicks.length),\n    filter(clicksLength => clicksLength >= 2),\n  );\n\n  const dupleClick = () => {\n    doubleClick$.subscribe(e => {\n      props.onClick('wait');\n    });\n  };\n\n  return (\n    <div className={s.ControlButtons}>\n      <button onClick={() => props.onClick(name)}>\n        {props.isRunning ? 'Stop' : 'Start'}\n      </button>\n      <button onClick={() => dupleClick()}>Wait</button>\n      <button onClick={() => props.onClick('reset')}>Reset</button>\n    </div>\n  );\n}\n\nTimeControls.propTypes = {\n  props: PropTypes.object.isRequired,\n};\n\nexport default TimeControls;\n","import { Component } from 'react';\nimport Time from 'components/Time/Time';\nimport TimeControls from 'components/TimeControls/TimeControls';\nimport { Observable } from 'rxjs';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      min: 0,\n      sec: 0,\n      ms: 0,\n      isRunning: false,\n      hasStarted: false,\n    };\n  }\n  componentDidMount() {\n    const stream$ = new Observable(observer => {\n      setInterval(() => {\n        if (this.state.isRunning) {\n          let ms = this.state.ms;\n          let sec = this.state.sec;\n          let min = this.state.min;\n          if (ms < 100) observer.next({ ms: ms + 1 });\n          else observer.next({ sec: sec + 1, ms: 0 });\n          if (sec > 59) observer.next({ min: min + 1, sec: 0 });\n        }\n      }, 10);\n    });\n    stream$.subscribe(val => {\n      if (Object.keys(val).length === 1) {\n        this.setState({ ms: val.ms });\n      } else {\n        if (Object.keys(val)[0] === 'sec') {\n          this.setState({ sec: val.sec, ms: 0 });\n        } else {\n          this.setState({ min: val.min, sec: 0 });\n        }\n      }\n    });\n  }\n  handleClick(button) {\n    let running = this.state.isRunning;\n    if (button === 'start' || button === 'wait') {\n      this.setState({ isRunning: !running, hasStarted: true });\n    } else if (button === 'reset' || button === 'stop') {\n      this.setState({ min: 0, sec: 0, ms: 0 });\n      this.setState({ isRunning: false, hasStarted: false });\n    }\n  }\n  fNum(e) {\n    return e.toLocaleString(undefined, { minimumIntegerDigits: 2 });\n  }\n  render() {\n    return (\n      <div className=\"stopwatch\">\n        <Time\n          min={this.fNum(this.state.min)}\n          sec={this.fNum(this.state.sec)}\n          ms={this.fNum(this.state.ms)}\n        ></Time>\n        <TimeControls\n          onClick={button => this.handleClick(button)}\n          isRunning={this.state.isRunning}\n          hasStarted={this.state.hasStarted}\n        ></TimeControls>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './style/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}